worker_processes auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 8192;
    multi_accept on;
}

http {
    
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    keepalive_timeout  65;
    types_hash_max_size 4096;

    log_format prometheus '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        '$request_time';           # <= important for latency

    access_log  /var/log/nginx/access_file.log  prometheus;
    error_log   /var/log/nginx/error_file.log warn;

    # Docker embedded DNS
    resolver 127.0.0.11 valid=5s ipv6=off;

    upstream django_upstream {
        zone django_upstream 64k;
        # Important: 'resolve' makes NGINX re-resolve 'backend' at runtime to get all replica IPs
        server backend:8000 resolve;
        keepalive 64;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Max upload (tune for media)
        client_max_body_size 50m;

        # Healthcheck
        location = /nginx-health {
            access_log off;
            return 200 "ok\n";
        }

        # Serve collected static files directly from the mounted volume
        location /static/ {
            alias /app/staticfiles/;
            add_header Cache-Control "public, max-age=31536000, immutable";
            access_log off;
            expires 7d;
        }

        # Proxy media files to MinIO (bucket name is part of the path: /media/<object>)
        location /media/ {
            proxy_buffering off;
            proxy_set_header Host $host;  # keep original host for relative URLs if needed
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://minio:9000;  # keeps the existing /media/... path
            add_header Cache-Control "public, max-age=31536000, immutable";
            expires 1y;
        }

        # Proxy to Django
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            send_timeout 60s;

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass http://django_upstream;
        }

        # Minimal internal status page for exporter
        location = /nginx_status {
            stub_status;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }

        # Basic security headers (can be tuned further)
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
    }
}
