version: "3.9"
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: socialnet
      POSTGRES_USER: socialuser
      POSTGRES_PASSWORD: socialpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    
  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      sh -c "
        until mc alias set local http://minio:9000 minioadmin minioadmin; do sleep 2; done &&
        mc mb -p local/media || true &&
        mc anonymous set public local/media
      "
    restart: "on-failure"

  backend:
    build: .
    # command: gunicorn socialnet_mono.wsgi:application --bind 0.0.0.0:8000
    # Switch to gunicorn in production; keep runserver for dev convenience
    command: bash -c 'python manage.py collectstatic --no-input && python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=*
      - POSTGRES_DB=socialnet
      - POSTGRES_USER=socialuser
      - POSTGRES_PASSWORD=socialpass
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      # S3/MinIO storage configuration
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_STORAGE_BUCKET_NAME=media
      - AWS_S3_ENDPOINT_URL=http://minio:9000
      - AWS_S3_REGION_NAME=us-east-1
      - AWS_S3_ADDRESSING_STYLE=path
      - AWS_S3_USE_SSL=False
      - AWS_S3_VERIFY=False
    depends_on:
      - db
      - redis
      - minio
      - minio-init
    expose:
      - "8000"
#    ports:
#      - "8000:8000"
    restart: always

  nginx:
    image: nginx:1.27
    depends_on:
      - backend
      - minio
    ports:
      - "80:80"
    volumes:
      - .:/app:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
